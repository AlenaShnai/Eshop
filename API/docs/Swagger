openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/alenashnai/hometask1/1.0.0
info:
  description: API for the IShop
  version: "1.0.0"
  title: API for the IShop
  contact:
    email: solonovichlena5@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: гость (все категории пользователей)
  - name: moderator
    description: Модератор
  - name: client
    description: Покупатель  
  - name: admin
    description: Администратор  
    
   
paths:
  /login:
    post:
      tags:
        - user
      summary: Вход пользователя в систему
      description: Аутентификация пользователя с использованием логина и пароля.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Логин пользователя
                  example: "хххх@gmail.com"
                password:
                  type: string
                  format: password
                  description: Пароль пользователя
                  example: "password"
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer Token для аутентификации
                    example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjEyMzQiLCJ1c2VybmFtZSI6ImJpcnNjaG5lcnNvZXZfaGVsbG9fc2VjdXJpdHkiLCJyb2xlIjoidXNlciJ9.cZL6FJ2EKzK4gSKpPVo5v6poE1T9m3MxoA3on8RHkJ2I"
        '400':
          description: Некорректный запрос (например, отсутствуют обязательные параметры)
        '401':
          description: Неверные данные для входа (неправильный логин или пароль)
        '500':
          description: Внутренняя ошибка сервера

  /productsreseach:
    get:
      tags:
        - user
        - client
        - moderator
        - admin
      summary: Поиск товаров на сайте
      description: Получение списка всех товаров
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/product'
        '404':
          description: Товар не найден         
        '500':
          description: Внутренняя ошибка сервера
  
  /reviews:
    post:
      tags:
        - client
      summary: 'Добавить отзыв'
      operationId: addreview
      security:
        - bearerAuth: []
      description: Добавление нового отзыва на купленный товар
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reviewNew'
        description: Новый отзыв к товару
      responses:
        '201':
          description: отзыв добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        '400':
          description: некорректный ввод
    
  /reviews/{id}:  
    delete:
      tags:
        - moderator
      summary: Удаление отзыва
      operationId: deleteProduct
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Идентификатор отзыва, который нужно удалить
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Товар удален
        '404':
          description: Товар не найден
        '500':
          description: Внутренняя ошибка сервера
 
  /cartitems:
    put:
      tags:
        - client
      summary: 'изменить количество товров в корзине'
      operationId: correctcartitems
      security:
        - bearerAuth: []
      description: Изменение количество товара в корзине
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cartitem'
        description: Изменение количество товара в корзине
      responses:
        '201':
          description: количество изменено
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
       
  /products:
    patch:
      tags:
        - admin
      summary:  Изменение товара в каталогев
      operationId: correctProducts
      description: изменить наименование товара в каталоге
      responses:
        '200':
          description: наименовние изменено
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/product'
        '400':
          description: Некорректный запрос (например, отсутствуют обязательные параметры)
        '404':
          description: Товар не найден
          

  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
      
  schemas:
    product:
      type: object
      required:
        - id
        - name
        - start_price
        - group
        - stokquantity
        - SCU
      properties:
        id:
          type: integer
          description: Идентификатор товара
          example: 105
        name:
          type: string
          description: Название продукта
          example: "Томат РБ"
        start_price:
          type: number
          format: decimal
          description: Цена товара после применения скидки
          example: 11.99
        group:
          type: string
          description: Группа товара
          example: "Овощи"
        SCU:
          type: string
          description: Бар-код товара
          example: "SHP0001"
        stokquantity:
          type: integer
          description: Количество товара
          example: 505,55  
    
    cartitem:
      type: object
      required:
        - id
        - idprodact
        - quantity
      properties:
        id:
          type: integer
          description: Идентификатор корзины
          example: 1055
        idprodact:
          type: integer
          description: Идентификатор товара
          example: 605
        quantity:
          type: integer
          description: Количество товара
          example: 5
    
    
   
    reviewNew:
      type: object
      required:
        - productname
        - idprodact
        - text
        - rating
        - username
        - iduser
      properties:
        idprodact:
          type: integer
          description: Идентификатор товара
          example: 105
        productname:
          type: string
          description: Название товара
          example: "ОЦена товара после применения скидкигурец"
        text:
          type: string
          description: Текс отзыва о товаре
          example: Товар замечательный, лучши всех. Рекомендую
        username:
          type: string
          description: Имя пользователя
          example: "Иван*"
        iduser:
          type: integer
          description: Идентификатор пользователя
          example: 1111  
        rating:
          type: number
          format: enum
          description: рейтинг товара от 1 до 5
          example: 5
